---
import SectionTitle from "./SectionTitle.astro";
const TIMESTAMP_END = 1761264420000;

---

<section class="w-full !min-h-[650px] my-32 flex flex-col gap-y-10 justify-center items-center">
  <SectionTitle title="Cuenta regresiva para el Evento..." />

  <div class="w-mfull gap-x-2 flex flex-row" data-date={TIMESTAMP_END}>
    <div class="boxer-date">
      <span class="text-5xl font-normal text-center" data-days></span>
      <span class="text-[9px] text-center">dias</span>
    </div>

    <div class="boxer-date">
      <span class="text-5xl font-normal text-center" data-hours></span>
      <span class="text-[9px] text-center">Horas</span>
    </div>

    <div class="boxer-date">
      <span class="text-5xl font-normal text-center" data-minutes></span>
      <span class="text-[9px] text-center">Minutos</span>
    </div>
    <div class="boxer-date">
      <span class="text-5xl font-normal text-center" data-seconds></span>
      <span class="text-[9px] text-center">Segundos</span>
    </div>
  </div>

  <span aria-hidden="true" class="mt-1 text-xl italic"
    >...para mi cumpleaÃ±os ðŸ¥³ðŸ¥³ðŸ¥³</span
  >
</section>

<script is:inline define:vars={{ timestamp: TIMESTAMP_END }}>
  // FunciÃ³n para inicializar el contador
  function initCountdown() {
    const SECOND = 1000;
    const MINUTE = SECOND * 60;
    const HOUR = MINUTE * 60;
    const DAY = HOUR * 24;

    const $countdown = document.querySelector("[data-date]");
    if (!$countdown) return null;

    const $days = document.querySelector("[data-days]");
    const $hours = document.querySelector("[data-hours]");
    const $minutes = document.querySelector("[data-minutes]");
    const $seconds = document.querySelector("[data-seconds]");

    const date = new Date(timestamp).getTime();

    function updateCountdown() {
      const now = Date.now();
      const diff = date - now;

      if (diff <= 0) {
        if ($days) $days.textContent = '00';
        if ($hours) $hours.textContent = '00';
        if ($minutes) $minutes.textContent = '00';
        if ($seconds) $seconds.textContent = '00';
        return;
      }

      if ($days) $days.textContent = Math.floor(diff / DAY).toString().padStart(2, '0');
      if ($hours) $hours.textContent = Math.floor((diff % DAY) / HOUR).toString().padStart(2, '0');
      if ($minutes) $minutes.textContent = Math.floor((diff % HOUR) / MINUTE).toString().padStart(2, '0');
      if ($seconds) $seconds.textContent = Math.floor((diff % MINUTE) / SECOND).toString().padStart(2, '0');
    }

    // Actualizar inmediatamente
    updateCountdown();
    
    // Configurar intervalo para actualizar cada segundo
    const interval = setInterval(updateCountdown, SECOND);
    
    // Retornar funciÃ³n de limpieza
    return () => clearInterval(interval);
  }

  // Inicializar el contador cuando el componente se monte
  let cleanup = initCountdown();

  // Reiniciar el contador cuando la navegaciÃ³n SPA ocurra
  document.addEventListener('astro:after-swap', () => {
    if (cleanup) cleanup();
    cleanup = initCountdown();
  });

  // Limpiar el intervalo cuando el componente se desmonte
  document.addEventListener('astro:before-swap', () => {
    if (cleanup) cleanup();
  });
</script>

<style is:inline>
  .boxer-date {
    background-color: var(--color-theme-dark-date);
    color: var(--color-theme-seashell);
    border-radius: 3px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease;
    width: 5rem;
    height: 4.5rem;
    transform: skew(-0.03turn);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2px;
  }
</style>
